@{
    ViewBag.Title = "Anime Recommendation System";
}

<head>

</head>

<body class="animebody">
    <container class="anime-container">
        <div class="anime-cover">
            <div class="anime-title">Anime Recommendation<br />System</div>
            <img src="@Url.Content("/Content/Assets/anime-rec/infopage/valley.jpg")" />
        </div>
        <div class="anime-section">
            <div class="section-title anime-heading">Overview</div>
            <p class="large-paragraph" style="text-align:center">For my final year dissertation, I designed and implemented 
            a recommendation system for anime TV shows and Movies. The software is catered towards those who are new to anime 
            to offer an easy way to get started with this genre of media entertainment.</p>
            <img src="@Url.Content("/Content/Assets/anime-rec/infopage/result.PNG")" class="result" />
        </div>

        <div class="anime-section">
            <div class="section-title anime-heading">System Architecture</div>
            <p class="large-paragraph">
                Below is a system architecture diagram for the project at the component level. The system is built
                using the Model-View-Controller acrchitecure whereby <span class="bold-text">models</span> serve as  blueprints for data access 
                from a SQL Server database. <span class="bold-text">Views</span> represent the web pages that the user may interact with and these pages 
                rely on dynmaic data that is processed by the <span class="bold-text">controllers</span>.
</p>

            <img class="animeimg" src="@Url.Content("/Content/Assets/anime-rec/infopage/architecture.png")" />
        </div>

        <div class="covercode">
            <img class="animeimg filterimg" src="@Url.Content("/Content/Assets/anime-rec/infopage/collab.png")" />
        </div>

        <div class="anime-section">
            <div class="section-title anime-heading">Hybrid System</div>
            <p class="large-paragraph">
                I designed and implemented a hybrid model that uses both content-based and collaborative filtering techniques.
                Content-based and collaborative filtering are common methods for building recommender systems. However, both have drawbacks when
                used in isolation. My model attempts to mitigate these pitfalls by using both methods to generate more accurate recommendations.
            </p>

            <img class="animeimg" src="@Url.Content("/Content/Assets/anime-rec/infopage/flowchart.png")" />
        </div>
        <div class="processing-container">
            <div class="title-paragraph">
                <div class="section-title anime-heading">Pre-Processing</div>
                <p class="small-paragraph">
                    The <span class="bold-text">pre-processing</span> stage involved manipulating the original dataset to suit the needs of the project. I
                    used Pandas dataframes to restructure the data so it was more useful for generating recommendations. This included
                    creating extra <span class="bold-text">features</span> for the recommender engine and omitting any data that was not useful.
                </p>
                <img src="@Url.Content("/Content/Assets/anime-rec/infopage/feature.png")" class="prep-img" />

            </div>
            <div class="title-paragraph">
                <div class="section-title anime-heading">Embedding</div>
                <p class="small-paragraph">
                    The next stage was <span class="bold-text">embedding</span> which refers to the vectorisation of our data. The goal
                    here is to convert the text-based data into numerical form so that mathematical operations can be performed on it. This will
                    mainly involve similarity calculations such as cosine similarity.
                </p>
                <div class="data-cover">
                    <div class="data-container">
                        <!--text data-->
                        <img src="@Url.Content("/Content/Assets/anime-rec/infopage/original.png")" class="embedding-img" />
                        <!--embedded dataset-->
                        <img src="@Url.Content("/Content/Assets/anime-rec/infopage/embedded.png")" class="embedding-img" />
                    </div>
                </div>
                <div class="embed-cont">
                    <button class="embed" value="text">Embed</button>
                </div>


            </div>
        </div>
            <p>Data source can be found <a href="https://www.kaggle.com/datasets/azathoth42/myanimelist?select=anime_cleaned.csv" target="_blank">here</a></p>
</container>
</body>

<!--<p>
    Tech Stack:The back-end
    logic for the web appliation was developed using .NET and Entity Framework. While the front-end
    was built using HTML/CSS and vanilla JavaScript.<br /> <br />
    The recommendation engine was developed using Python libraries such as
    Scikit-Learn, Pandas and Numpy.
</p>-->
